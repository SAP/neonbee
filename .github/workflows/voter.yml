# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: NeonBee Voter

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Test Java ${{ matrix.java }} on ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}

    strategy:
      matrix:
        java: ['17.0', '21.0']
        platform: [ubuntu-22.04] # macOS-latest, windows-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: ${{ matrix.java }}
        cache: 'gradle'

    - name: Cache SonarCloud packages
      uses: actions/cache@v2
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: ./gradlew --no-daemon build test -PtestPlan=withGlobalTimeout -PunitTestTimeout=30s

    - name: Run Sonarqube
      if: github.event_name != 'pull_request'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: ./gradlew --no-daemon sonar

    - name: Run javadoc
      run: ./gradlew --no-daemon javadoc testJavadoc
