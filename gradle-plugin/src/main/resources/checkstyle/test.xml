<?xml version="1.0"?>
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.3//EN" "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<module name="Checker">
    <property name="charset" value="UTF-8" />
    <property name="severity" value="warning" />

    <!-- Suppressions -->
    <module name="SuppressionFilter">
        <property name="file" value="${config_loc}/suppressions.xml" />
    </module>
    <module name="SuppressWarningsFilter" />

    <!-- Whitespace Checks See http://checkstyle.org/config_whitespace.html -->
    <module name="FileTabCharacter">
        <property name="eachLine" value="true" />
    </module>

    <module name="TreeWalker">
        <!-- Suppressions -->
        <module name="SuppressWarningsHolder" />
        <module name="SuppressWarnings">
            <property name="id" value="checkstyle:suppresswarnings" />
        </module>

        <!-- Imports Checks https://checkstyle.sourceforge.io/config_imports.html -->
        <module name="AvoidStarImport" />
        <module name="RedundantImport" />
        <module name="UnusedImports" />

        <!-- Annotation Checks https://checkstyle.sourceforge.io/config_annotation.html -->
        <module name="AnnotationLocation" />

        <!-- Block Checks https://checkstyle.sourceforge.io/config_blocks.html -->
        <module name="NeedBraces">
            <property name="allowSingleLineStatement" value="true" />
        </module>

        <!-- Design Checks https://checkstyle.sourceforge.io/config_design.html -->
        <module name="MutableException" />

        <!-- Coding Checks https://checkstyle.sourceforge.io/config_coding.html -->
        <module name="AvoidDoubleBraceInitialization" />
        <module name="CovariantEquals" />
        <module name="DefaultComesLast" />
        <module name="EmptyStatement" />
        <module name="EqualsAvoidNull" />
        <module name="EqualsHashCode" />
        <!-- <module name="MagicNumber">
            <property name="ignoreHashCodeMethod" value="true"/>
        </module> -->
        <module name="MissingSwitchDefault" />
        <module name="MultipleVariableDeclarations" />
        <module name="NestedIfDepth">
            <property name="max" value="3" />
        </module>
        <module name="NestedTryDepth">
            <property name="max" value="3" />
        </module>
        <module name="NoArrayTrailingComma" />
        <module name="NoEnumTrailingComma" />
        <module name="NoFinalizer" />
        <module name="OneStatementPerLine" />
        <module name="OverloadMethodsDeclarationOrder" />
        <module name="PackageDeclaration" />
        <module name="ParameterAssignment" />
        <module name="SimplifyBooleanExpression" />
        <module name="SimplifyBooleanReturn" />
        <module name="StringLiteralEquality" />
        <!-- <module name="UnnecessaryParentheses" /> -->
        <module name="UnnecessarySemicolonAfterOuterTypeDeclaration" />
        <module name="UnnecessarySemicolonAfterTypeMemberDeclaration" />
        <module name="UnnecessarySemicolonInEnumeration" />
        <module name="UnnecessarySemicolonInTryWithResources" />
        <module name="IllegalTokenText">
            <property name="tokens" value="STRING_LITERAL, CHAR_LITERAL" />
            <property name="format" value="\\u00(09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)" />
            <property name="message" value="Consider using special escape sequence instead of octal value or Unicode escaped value." />
        </module>

        <!-- Miscellaneous Checks https://checkstyle.sourceforge.io/config_misc.html -->
        <module name="ArrayTypeStyle" />
        <module name="UpperEll" />
        <module name="CommentsIndentation" />

        <!-- Modifier Checks https://checkstyle.sourceforge.io/config_modifier.html -->
        <module name="ModifierOrder" />
        <module name="RedundantModifier" />

        <!-- Naming Checks https://checkstyle.sourceforge.io/config_naming.html -->
        <module name="PackageName">
            <property name="format" value="[a-z]+(\.[a-z][a-z0-9]*)*$" />
            <message key="name.invalidPattern" value="Package name ''{0}'' must match pattern ''{1}''." />
        </module>
        <module name="TypeName">
            <property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF" />
            <message key="name.invalidPattern" value="Type name ''{0}'' must match pattern ''{1}''." />
        </module>
        <module name="MemberName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$" />
            <message key="name.invalidPattern" value="Member name ''{0}'' must match pattern ''{1}''." />
        </module>
        <module name="ParameterName">
            <property name="format" value="^[a-z]([a-zA-Z0-9]*)?$" />
            <message key="name.invalidPattern" value="Parameter name ''{0}'' must match pattern ''{1}''." />
        </module>
        <module name="ClassTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)" />
            <message key="name.invalidPattern" value="Class type name ''{0}'' must match pattern ''{1}''." />
        </module>
        <module name="MethodTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)" />
            <message key="name.invalidPattern" value="Method type name ''{0}'' must match pattern ''{1}''." />
        </module>
        <module name="InterfaceTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)" />
            <message key="name.invalidPattern" value="Interface type name ''{0}'' must match pattern ''{1}''." />
        </module>
        <module name="LambdaParameterName">
            <property name="format" value="^[a-z]([a-zA-Z0-9]*)?$" />
            <message key="name.invalidPattern" value="Lambda parameter name ''{0}'' must match pattern ''{1}''." />
        </module>
        <module name="LocalVariableName">
            <property name="format" value="^[a-z]([a-zA-Z0-9]*)?$" />
            <message key="name.invalidPattern" value="Local variable name ''{0}'' must match pattern ''{1}''." />
        </module>
        <module name="CatchParameterName">
            <property name="format" value="^[a-z]([a-zA-Z0-9]*)?$" />
            <message key="name.invalidPattern" value="Catch parameter name ''{0}'' must match pattern ''{1}''." />
        </module>

        <!-- Whitespace Checks See http://checkstyle.org/config_whitespace.html -->
        <module name="EmptyLineSeparator">
            <property name="allowMultipleEmptyLines" value="false" />
            <property name="allowMultipleEmptyLinesInsideClassMembers" value="false" />
            <property name="allowNoEmptyLineBetweenFields" value="true" />
        </module>
        <module name="GenericWhitespace" />
        <module name="MethodParamPad" />
        <module name="NoWhitespaceBefore" />
        <module name="ParenPad" />
        <module name="OperatorWrap" />

        <!-- JavaDoc Checks See http://checkstyle.org/config_javadoc.html -->
        <!-- Ignore in tests for now
        <module name="NonEmptyAtclauseDescription"/>
        <module name="JavadocStyle"/>
        <module name="InvalidJavadocPosition"/>
        <module name="JavadocTagContinuationIndentation"/>
        <module name="MissingJavadocMethod">
            <property name="scope" value="protected"/>
            <property name="allowedAnnotations" value="Override, Test, VisibleForTesting, AfterAll, BeforeAll, AfterEach, BeforeEach"/>
            <property name="tokens" value="METHOD_DEF, CTOR_DEF, ANNOTATION_FIELD_DEF"/>
            <property name="ignoreMethodNamesRegex" value="^.*Impl$"/>
        </module>
        <module name="JavadocMethod">
            <property name="scope" value="protected"/>
            <property name="allowedAnnotations" value="Override, Test, VisibleForTesting"/>
            <property name="tokens" value="METHOD_DEF, CTOR_DEF, ANNOTATION_FIELD_DEF"/>
            <property name="validateThrows" value="false"/>
        </module>
        <module name="JavadocVariable">
            <property name="scope" value="public"/>
            <property name="ignoreNamePattern" value="LOGGER|QUALIFIED_NAME"/>
        </module>
-->
        <!--does not work with eclipse plugin -->
        <!--
        <module name="JavadocMissingLeadingAsterisk"/>
        <module name="JavadocMissingWhitespaceAfterAsterisk"/>
        <module name="RequireEmptyLineBeforeBlockTagGroup"/>
        <module name="JavadocParagraph"/>
-->
    </module>
</module>